[{"/Users/chris/Desktop/infscroll/src/index.js":"1","/Users/chris/Desktop/infscroll/src/App.js":"2","/Users/chris/Desktop/infscroll/src/components/DataCard.jsx":"3","/Users/chris/Desktop/infscroll/src/utils.js":"4","/Users/chris/Desktop/infscroll/src/components/LowerCardButtons.jsx":"5"},{"size":187,"mtime":1607037020782,"results":"6","hashOfConfig":"7"},{"size":1284,"mtime":1607050278413,"results":"8","hashOfConfig":"7"},{"size":2170,"mtime":1607049205412,"results":"9","hashOfConfig":"7"},{"size":4820,"mtime":1607047780122,"results":"10","hashOfConfig":"7"},{"size":1234,"mtime":1607050156255,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ukbvnd",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chris/Desktop/infscroll/src/index.js",[],["24","25"],"/Users/chris/Desktop/infscroll/src/App.js",["26"],"/Users/chris/Desktop/infscroll/src/components/DataCard.jsx",["27","28","29"],"import { useEffect, useState } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { getRandUsername, getRandPostTitle } from \"../utils\";\nimport { LowerCardButtons } from \"./LowerCardButtons\";\n\nconst DataCard = () => {\n    const [userImg, setUserImage] = useState();\n    const [postImg, setPostImage] = useState();\n    const [postTitle, setPostTitle] = useState();\n    const [username, setUsername] = useState();\n    const [randMinutes] = useState(Math.floor(Math.random()*89))\n    const [randCred] = useState(Math.floor(Math.random() * 998))\n\n    // Grabs a random photo and sizes it according to passed in height and width parameters\n    const fetchPhoto = async (width, height) => {\n        const response = await fetch(`https://picsum.photos/${width}/${height}`);\n        const blob = await response.blob();\n        return URL.createObjectURL(blob);\n    }\n\n    useEffect(() => {\n        fetchPhoto(30, 30).then(img => setUserImage(img))\n        fetchPhoto(520, 400).then(img => setPostImage(img))\n        setUsername(getRandUsername());\n        setPostTitle(getRandPostTitle());\n    }, [])\n    return (\n        <div className=\"inf-card\">\n                <h5>{postTitle}</h5>\n                <div style={{display: \"flex\", flexDirection: \"unset\"}}>\n                    <Col xs={1}>\n                        <Row>\n                            <img style={{height: \"30px\", width: \"30px\", borderRadius: \"25px\"}} src={userImg} />\n                        </Row>\n                    </Col>\n                    <Col xs={8} style={{fontSize:\"10px\"}}>\n                        <Row>\n                            <span>{username} { } â€¢ {randCred} { } cred</span>\n                        </Row>\n                        <Row>\n                            <span><i>Posted {randMinutes} minutes ago.</i></span>\n                        </Row>\n                    </Col>\n                </div>\n                <img \n                    className=\"py-3\"\n                    style={{height: \"400px\", width: \"100%\"}}\n                    src={postImg}\n                />\n                <LowerCardButtons className=\"py-2\"/>\n        </div>\n    )\n}\n\nexport default DataCard\n","/Users/chris/Desktop/infscroll/src/utils.js",[],"/Users/chris/Desktop/infscroll/src/components/LowerCardButtons.jsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":20,"nodeType":"36","messageId":"37","endLine":1,"endColumn":29},{"ruleId":"34","severity":1,"message":"38","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":14},{"ruleId":"39","severity":1,"message":"40","line":33,"column":29,"nodeType":"41","endLine":33,"endColumn":112},{"ruleId":"39","severity":1,"message":"40","line":45,"column":17,"nodeType":"41","endLine":49,"endColumn":19},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]